// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Patient_Models.DbContexts;

#nullable disable

namespace Patient_Models.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    partial class PatientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Patient_Models.Models.Allergies", b =>
                {
                    b.Property<int>("AllergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllergyId"), 1L, 1);

                    b.Property<string>("AllergyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AllergyId");

                    b.ToTable("tblAllergies");

                    b.HasData(
                        new
                        {
                            AllergyId = 1,
                            AllergyName = "Drugs - Penicillin"
                        },
                        new
                        {
                            AllergyId = 2,
                            AllergyName = "Drugs - Others"
                        },
                        new
                        {
                            AllergyId = 3,
                            AllergyName = "Animals"
                        },
                        new
                        {
                            AllergyId = 4,
                            AllergyName = "Food"
                        },
                        new
                        {
                            AllergyId = 5,
                            AllergyName = "Ointments"
                        },
                        new
                        {
                            AllergyId = 6,
                            AllergyName = "Plant"
                        },
                        new
                        {
                            AllergyId = 7,
                            AllergyName = "Sprays"
                        },
                        new
                        {
                            AllergyId = 8,
                            AllergyName = "Others"
                        },
                        new
                        {
                            AllergyId = 9,
                            AllergyName = "No Allergies"
                        });
                });

            modelBuilder.Entity("Patient_Models.Models.Allergies_Details", b =>
                {
                    b.Property<int>("Allergies_Details_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Allergies_Details_Id"), 1L, 1);

                    b.Property<int>("AllergyId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Allergies_Details_Id");

                    b.HasIndex("AllergyId");

                    b.HasIndex("PatientId");

                    b.ToTable("tblAllergies_Details");
                });

            modelBuilder.Entity("Patient_Models.Models.Disease_Information", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseId"), 1L, 1);

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DiseaseId");

                    b.ToTable("tblDisease_Information");

                    b.HasData(
                        new
                        {
                            DiseaseId = 1,
                            DiseaseName = "Diabetes"
                        },
                        new
                        {
                            DiseaseId = 2,
                            DiseaseName = "Hypertension"
                        },
                        new
                        {
                            DiseaseId = 3,
                            DiseaseName = "Arthritis"
                        },
                        new
                        {
                            DiseaseId = 4,
                            DiseaseName = "Heart Disease"
                        },
                        new
                        {
                            DiseaseId = 5,
                            DiseaseName = "Respiratory Infections"
                        });
                });

            modelBuilder.Entity("Patient_Models.Models.NCD", b =>
                {
                    b.Property<int>("NCD_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NCD_Id"), 1L, 1);

                    b.Property<string>("NCD_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NCD_Id");

                    b.ToTable("tblNCD");

                    b.HasData(
                        new
                        {
                            NCD_Id = 1,
                            NCD_Name = "Asthma"
                        },
                        new
                        {
                            NCD_Id = 2,
                            NCD_Name = "Cancer"
                        },
                        new
                        {
                            NCD_Id = 3,
                            NCD_Name = "Disorders of ear"
                        },
                        new
                        {
                            NCD_Id = 4,
                            NCD_Name = "Disorder of eye"
                        },
                        new
                        {
                            NCD_Id = 5,
                            NCD_Name = "Mental illness"
                        });
                });

            modelBuilder.Entity("Patient_Models.Models.NCD_Details", b =>
                {
                    b.Property<int>("NCD_Details_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NCD_Details_Id"), 1L, 1);

                    b.Property<int>("NCD_Id")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("NCD_Details_Id");

                    b.HasIndex("NCD_Id");

                    b.HasIndex("PatientId");

                    b.ToTable("tblNCD_Details");
                });

            modelBuilder.Entity("Patient_Models.Models.Patients_Information", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"), 1L, 1);

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int?>("Disease_InformationDiseaseId")
                        .HasColumnType("int");

                    b.Property<int>("Epilepsy")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("PatientId");

                    b.HasIndex("Disease_InformationDiseaseId");

                    b.ToTable("tblPatients_Information");
                });

            modelBuilder.Entity("Patient_Models.Models.Allergies_Details", b =>
                {
                    b.HasOne("Patient_Models.Models.Allergies", "Allergies")
                        .WithMany("Allergies_Details")
                        .HasForeignKey("AllergyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patient_Models.Models.Patients_Information", "Patients_Information")
                        .WithMany("Allergies_Details")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergies");

                    b.Navigation("Patients_Information");
                });

            modelBuilder.Entity("Patient_Models.Models.NCD_Details", b =>
                {
                    b.HasOne("Patient_Models.Models.NCD", "NCD")
                        .WithMany("NCD_Details")
                        .HasForeignKey("NCD_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patient_Models.Models.Patients_Information", "Patients_Information")
                        .WithMany("NCD_Details")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NCD");

                    b.Navigation("Patients_Information");
                });

            modelBuilder.Entity("Patient_Models.Models.Patients_Information", b =>
                {
                    b.HasOne("Patient_Models.Models.Disease_Information", null)
                        .WithMany("Patients_Information")
                        .HasForeignKey("Disease_InformationDiseaseId");
                });

            modelBuilder.Entity("Patient_Models.Models.Allergies", b =>
                {
                    b.Navigation("Allergies_Details");
                });

            modelBuilder.Entity("Patient_Models.Models.Disease_Information", b =>
                {
                    b.Navigation("Patients_Information");
                });

            modelBuilder.Entity("Patient_Models.Models.NCD", b =>
                {
                    b.Navigation("NCD_Details");
                });

            modelBuilder.Entity("Patient_Models.Models.Patients_Information", b =>
                {
                    b.Navigation("Allergies_Details");

                    b.Navigation("NCD_Details");
                });
#pragma warning restore 612, 618
        }
    }
}
